buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'nu.studer:gradle-jooq-plugin:3.0.2'
        classpath 'com.sun.xml.bind:jaxb-core:2.3.0.1'
        classpath 'com.sun.xml.bind:jaxb-impl:2.3.0.1'
        classpath 'javax.activation:activation:1.1.1'
        classpath 'javax.xml.bind:jaxb-api:2.3.0'
        classpath 'com.h2database:h2:1.4.196'
        classpath 'org.jooq:jooq-meta-extensions:3.11.7'
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "org.jetbrains.kotlin.jvm" version "1.2.61"
    id "org.jetbrains.kotlin.kapt" version "1.2.61"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.2.61"
    id 'nu.studer.jooq' version '3.0.2'
}

apply plugin: 'nu.studer.jooq'
apply plugin: "application"

version "0.1"
group "batch.scheduler"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.0.1'
    }
}

dependencies {
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-function-aws"
    compile "io.micronaut:micronaut-function-client"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "io.micronaut.configuration:micronaut-jdbc-hikari"
    compile "org.jooq:jooq"
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    compile group: 'com.sun.xml.bind', name: 'jaxb-xjc', version: '2.1.7'
    compile "io.micronaut:micronaut-spring"
    compile group: 'com.breinify', name: 'brein-time-utilities', version: '1.7.0'
    jooqRuntime "org.jooq:jooq-meta-extensions:3.11.7"
    jooqRuntime 'javax.activation:activation:1.1.1'
    jooqRuntime 'javax.xml.bind:jaxb-api:2.3.0'
    jooqRuntime 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    jooqRuntime 'com.sun.xml.bind:jaxb-impl:2.3.0.1'
    jooqRuntime 'com.h2database:h2:1.4.196'
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest "io.micronaut:micronaut-inject-java"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.4.1"
    runtime "com.h2database:h2"
    runtime "org.springframework:spring-jdbc"
    runtime "org.jooq:jooq-meta"
    runtime "org.jooq:jooq-codegen"
    testCompile "junit:junit:4.12"
    testCompile "io.micronaut:micronaut-inject-java"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "org.junit.jupiter:junit-jupiter-api:5.1.0"
    testCompile "org.jetbrains.spek:spek-api:1.1.5"
    testCompile group: 'com.h2database', name: 'h2', version: '1.3.148'
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.1.0"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:1.1.5"
    testRuntime "io.micronaut:micronaut-function-web"
    testRuntime "io.micronaut:micronaut-http-server-netty"
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')
mainClassName = "io.micronaut.function.executor.FunctionApplication"

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

test {
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    javaParameters = true 
	}
}

jooq {
    version = '3.11.2'
    edition = 'OSS'
    batchscheduler(sourceSets.main) {
        generator {
            database {
                name = 'org.jooq.meta.extensions.ddl.DDLDatabase'
                properties {
                    property {
                        key = 'scripts'
                        value = 'src/main/resources/ddl.sql'
                    }
                    property {
                        key = 'sort'
                        value = 'semantic'
                    }
                }
            }
        }
    }
}